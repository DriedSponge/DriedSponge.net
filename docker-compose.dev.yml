version: '3.8'

networks:
  dnetdev:

services:
  nginx:
    image: nginx:stable-alpine
    depends_on:
      - php
      - mysql
    networks:
      - dnetdev
    container_name: dnetdev_nginx
    ports:
      - "3201:80"
    volumes:
      - ./src:/var/www/html
      - ./dockerfiles/nginx/default:/etc/nginx/conf.d/default.conf

  mysql:
    image: mysql:latest
    networks:
      - dnetdev
    restart: unless-stopped
    tty: true
    ports:
      - "33062:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    env_file:
      - ./dockerfiles/mysql.env
    container_name: mysql

  php:
    networks:
      - dnetdev
    container_name: dnetdev_php
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    ports:
      - "9002:9000"
    volumes:
      - ./src:/var/www/html
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile

  composer:
    networks:
      - dnetdev
    volumes:
      - ./src:/app
    depends_on:
      - nginx
    container_name: dnetdev_composer
    build:
      context: .
      dockerfile: ./dockerfiles/composer.dockerfile
  npm:
    image: node:15.2.0-alpine3.10
    networks:
      - dnetdev
    volumes:
      - ./src:/app
    container_name: dnetdev_npm
    depends_on:
      - nginx
    working_dir: /app
    command: ["/app/npm.sh"]
  artisan:
    depends_on:
      - composer
    networks:
      - dnetdev
    container_name: dnetdev_artisan
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    volumes:
      - ./src:/var/www/html
    build:
      context: .
      dockerfile: ./dockerfiles/php.dockerfile
    working_dir: /var/www/html/
    command: ["/var/www/html/artisan.sh"]
