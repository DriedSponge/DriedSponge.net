version: '3.8'

networks:
    dnet:

services:
    nginx:
        image: nginx:stable-alpine
        depends_on:
            - php
            - mysql
        networks:
            - dnet
        container_name: dnet_nginx
        restart: unless-stopped
        ports:
            - "3200:80"
        volumes:
            - ./src:/var/www/html
            - ./dockerfiles/nginx/default:/etc/nginx/conf.d/default.conf

    mysql:
        image: mysql:latest
        networks:
            - dnet
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        env_file:
          - ./dockerfiles/mysql.env
        container_name: mysql

    php:
        networks:
            - dnet
        container_name: dnet_php
        environment:
            - COMPOSER_MEMORY_LIMIT=-1
        ports:
            - "9000:9000"
        volumes:
            - ./src:/var/www/html
        build:
            context: .
            dockerfile: ./dockerfiles/php.dockerfile
        dns:
          - 1.1.1.1
          - 1.0.0.1

    composer:
        networks:
            - dnet
        volumes:
            - ./src:/app
        depends_on:
            - nginx
        container_name: dnet_composer
        build:
            context: .
            dockerfile: ./dockerfiles/composer.dockerfile
    npm:
        image: node:current-alpine3.12
        networks:
            - dnet
        volumes:
            - ./src:/app
        container_name: dnet_npm
        depends_on:
            - nginx
        working_dir: /app
        command: ["/app/npm.sh"]
    artisan:
        depends_on:
            - composer
        networks:
            - dnet
        container_name: dnet_artisan
        environment:
            - COMPOSER_MEMORY_LIMIT=-1
        volumes:
            - ./src:/var/www/html
        build:
            context: .
            dockerfile: ./dockerfiles/php.dockerfile
        working_dir: /var/www/html/
        command: ["/var/www/html/artisan.sh"]
