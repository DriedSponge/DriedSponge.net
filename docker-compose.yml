version: '3'

networks:
    laravel:

services:
    nginx:
        image: nginx:stable-alpine
        depends_on:
            - php
            - mysql
        networks:
            - laravel
        container_name: dnet_nginx
        ports:
            - "3200:80"
        volumes:
            - ./src:/var/www/html
            - ./nginx/default:/etc/nginx/conf.d/default.conf
            - ./ssl:/etc/ssl

    mysql:
        image: mysql:5.7.22
        networks:
            - laravel
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        env_file:
          - mysql.env
        container_name: mysql


    php:
        networks:
            - laravel
        container_name: dnet_php
        environment:
            - COMPOSER_MEMORY_LIMIT=-1
        ports:
            - "9000:9000"
        volumes:
            - ./src:/var/www/html
        build:
            context: .
            dockerfile: ./dockerfiles/php.dockerfile

    composer:
        networks:
            - laravel
        volumes:
            - ./src:/app
        depends_on:
            - nginx
        container_name: dnet_composer
        build:
            context: .
            dockerfile: ./dockerfiles/composer.dockerfile
    npm:
        build:
            context: .
            dockerfile: ./dockerfiles/npm.dockerfile
        networks:
            - laravel
        volumes:
            - ./src:/app
        container_name: dnet_npm
        depends_on:
            - nginx
    artisan:
        depends_on:
            - nginx
        networks:
            - laravel
        container_name: dnet_artisan
        environment:
            - COMPOSER_MEMORY_LIMIT=-1
        volumes:
            - ./src:/var/www/html
        build:
            context: .
            dockerfile: ./dockerfiles/php.dockerfile
        working_dir: /var/www/html/
        command: ["/var/www/html/artisan.sh"]
